(module
  (type $ft2 (func (param f64 i32) (result i32)))
  (type $ft (func (param f64 i32) (result f64)))
  (func $invalid (param f64 i32) (result i32)
    (local.get 1)
  )
  (func $mul (param f64 i32) (result f64)
    (local.get 0)
    (f64.convert_i32_s (local.get 1))
    (f64.mul)
  )
  (func $div (param f64 i32) (result f64)
    (local.get 0)
    (f64.convert_i32_s (local.get 1))
    (f64.div)
  )
  (func $sub (param f64 i32) (result f64)
    (local.get 0)
    (f64.convert_i32_s (local.get 1))
    (f64.sub)
  )
  (func $add (param f64 i32) (result f64)
    (local.get 0)
    (f64.convert_i32_s (local.get 1))
    (f64.add)
  )

  (func $test (param i32 f64 i32) (result f64)
    (local i32 f64)
    (local.get 1)
    (local.get 2)
    (local.get 0)
    (call_indirect 0 (type $ft))
    (f64.const -1)
    (f64.add)
    (return)
  )
  (table (;0;) 7 10 funcref)
  (elem (i32.const 2) $add $sub $mul $div $invalid)
  (memory (;0;) 2 4)
  (export "memory" (memory 0))
  (export "main" (func $test))
)
    
